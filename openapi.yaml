swagger: "2.0"
info:
  title: Authorization Service for the Medidata Platform
  description: |-
    The authorization process enables Medidata Clinical Cloud (MCC) access control and
    authorization of MCC resources.
  contact:
    name: The Authorization Development Team
    email: team04@mdsol.com
  version: v1.4.5
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json

x-mdsol:
  docs:
    ConfigurationTypes:
      page: Study Administration/Configuration Types
      overview: |-
        Customer-defined group of configuration type roles.
    ConfigurationTypeRoles:
      page: User Access Management/Configuration Type Roles
      overview: |-
        Role with a configurable set of either permissions or other roles.
        Roles that contain permissions are not directly assigned to an
        operator. You can directly assign roles with a set of other roles.
    ConflictingRolesSets:
      page: User Access Management/Conflicting Roles Sets
      overview: |-
        Set of roles that creates a conflict when more than one role is assigned
        to an operator on a given operable.
  servers:
    - url: https://dalton{stage}.imedidata{region}.{tld}{basePath}
  eurekaName: dalton
  slos:
    defaultSLO:
      99thPercentile: 100ms
      requestsPerSecond: 500

paths:
  /access_control_lists:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    post:
      summary: Create an Access Control List
      description: Create an access control list made up of role assignments for different protected resource types.
      operationId: access_control_lists.create
      responses:
        '202':
          description: |-
            Access Control List job successfully created. Processing may take up to 90 minutes to complete.
          schema:
            $ref: '#/definitions/AccessControlList'
        '403':
          description: Requester unauthorized to create access control lists for the specified access control list.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: Unprocessable entity. `operable_type` missing or `access_type` not set to `allow`.
      parameters:
        - name: access_control_list
          description: New access control list properties.
          in: body
          required: true
          schema:
            $ref: '#/definitions/AccessControlListCreateRequest'

  '/access_control_lists/{uuid}':
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get an Access Control List
      operationId: access_control_lists.show
      responses:
        '200':
          description: |-
            The access control list found successfully. Status and a link to its contents returned.
          schema:
            $ref: '#/definitions/AccessControlList'
        '404':
          description: |-
            Not found. Requester does not have proper permissions or explicitly prohibited for the access control list.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'
    delete:
      summary: Delete an Access Control List
      operationId: access_control_lists.delete
      responses:
        '204':
          description: Access control list deleted.
        '404':
          description: Not found. Requester unauthorized to delete access control lists or failed to find the specified list.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'

  /attribute_collections:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    post:
      summary: Create an Attribute Collection
      operationId: attribute_collections.create
      responses:
        '201':
          description: |-
            The attribute collection successfully created or found.
          schema:
            $ref: '#/definitions/AttributeCollection'
        '422':
          description: |-
            One of the following situations occurred:
              - Required parameters not provided.
              - `attribute_collection_template_oid` does not reference an existing attribute collection template.
              - `traversal_attributes` do not contain required keys from the associated attribute collection template.
      parameters:
        - name: attribute_collection
          description: New attribute collection properties.
          in: body
          required: true
          schema:
            $ref: '#/definitions/AttributeCollectionCreateRequest'

  '/attribute_collections/{uuid}':
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get an Attribute Collection
      operationId: attribute_collections.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/AttributeCollection'
        '404':
          description: Not found. Attribute collection unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'

  /configuration_types:
    x-mdsol:
      doc:
        $ref: '#/x-mdsol/docs/ConfigurationTypes'
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      x-mdsol:
        externalPath: idem
      summary: Get All Configuration Types
      description: List of configuration types filtered by `parent_uri`.
      operationId: configuration_types.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationType'
          examples:
            application/json: |-
              [
                {
                  "uuid": "079e6b9d-e467-432e-94bd-ba39104d2493",
                  "client_division_uuid": "48196921-5eea-4957-8ee3-4912d480560a",
                  "parent_uri": "com:mdsol:client_division_schemes:d067ba34-c52a-4c30-b2bc-6bb8093beac0",
                  "name": "Domestic Cosmetic",
                  "configuration_type_uuids": ["b2652a67-c587-4f71-a8f2-688ce02c32c8"],
                  "created_at": "1980-01-01T00:00:00.000Z"
                },
                {
                  "uuid": "9a6927d3-0f0f-4c17-8098-3172d47cee33",
                  "client_division_uuid": "48196921-5eea-4957-8ee3-4912d480560a",
                  "parent_uri": "com:mdsol:client_division_schemes:d067ba34-c52a-4c30-b2bc-6bb8093beac0",
                  "name": "Global Cosmetic",
                  "configuration_type_uuids": ["e991d87b-d8c9-45d7-b344-77937670ef52"],
                  "created_at": "1980-01-01T00:00:00.000Z"
                },
              ]
        '404':
          description: Not found. Parent URI unrecognized or requester has no permissions for the resource.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - name: client_division_uuid
          in: query
          required: false
          type: string
          description: Deprecated. Use `parent_uri`.
          # TODO: Add 'deprecated: true' when we begin using V3 of the OpenAPI specification
        - name: parent_uri
          in: query
          required: false
          type: string
          description: |-
            Filters configuration types associated with resource specified in the form of MDSOL URI.
            Client division schemes or apps are the only valid resource types. For example, a valid client division
            scheme resource type's MDSOL URI looks like `com:mdsol:client_division_schemes:<client_division_scheme_uuid>`. 
            Required if `client_division_uuid` not provided.
    post:
      summary: Create a New Configuration Type
      description: Create a new configuration type for a particular `parent_uri`.
      operationId: configuration_types.create
      responses:
        '201':
          description: Success.
          schema:
            $ref: '#/definitions/ConfigurationType'
        '404':
          description: |-
            Not found. Requester unauthorized to create configuration types for the specified client division scheme
            or the specified configuration type UUIDs not found.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - Required `name` parameter not provided.
              - Invalid parameter values provided. For example, `configuration_type_uuids` not an array.
              - Name is not unique within the client division scheme or exceeds 100 characters.
              - Specified client division scheme unrecognized.
      parameters:
        - name: configuration_type
          description: New configuration type title.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTypeCreateRequest'

  '/configuration_types/{uuid}':
    x-mdsol:
      doc:
        $ref: '#/x-mdsol/docs/ConfigurationTypes'
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      x-mdsol:
        externalPath: idem
      summary: Get a Configuration Type
      operationId: configuration_types.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConfigurationType'
        '404':
          description: Not found. Configuration type unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'
    post:
      summary: Update a Configuration Type
      description: Update the `name` or `configuration_type_uuids` for an existing configuration type.
      operationId: configuration_types.update
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConfigurationType'
        '404':
          description: Not found. Configuration type unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - Attempted to change read-only attributes. For example, `created_at`.
              - Name not unique within the client division scheme or exceeds 100 characters.
              - `configuration_type_uuids` cannot include the configuration type being updated.
              - `configuration_type_uuids` cannot result in a cycle.
      parameters:
        - $ref: '#/parameters/uuid'
        - name: update_parameters
          description: New `name` and/or `configuration_type_uuids` values for the configuration type.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTypeUpdateRequest'
    delete:
      summary: Delete a Configuration Type
      operationId: configuration_types.destroy
      responses:
        '204':
          description: Success.
        '404':
          description: Not found. Configuration type unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '409':
          description: Cannot delete a configuration type with roles assigned in role assignments.
        '415':
          description: Content-Type header format unsupported.
      parameters:
        - $ref: '#/parameters/uuid'

  '/configuration_types/{configuration_type_uuid}/roles':
    x-mdsol:
      doc:
        $ref: '#/x-mdsol/docs/ConfigurationTypeRoles'
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      x-mdsol:
        externalPath: idem
      summary: Get All Configuration Type Roles
      operationId: configuration_type_roles.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationTypeRole'
        '404':
          description: Not found. Configuration type unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '422':
          description: One or more malformed URI query parameters.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - name: configuration_type_uuid
          description: The configuration type's universally unique identifier.
          in: path
          required: true
          type: string
        - name: operator_uri
          description: Filters configuration type roles assignable by the specific user for the specified operator URI.
          in: query
          required: false
          type: string
        - name: operable_uri
          description: Filters configuration type roles assignable by the specific user for the specified operable URI.
          in: query
          required: false
          type: string
        - name: permission
          description: |-
             If you include the `permission` parameter in a request, it filters the returned roles to just those 
             roles with that permission.
          in: query
          required: false
          type: string
        - name: tag
          description: |-
             If you include the `tag` parameter in a request, it filters the returned roles to just those 
             roles with that tag.
          in: query
          required: false
          type: string
        - name: standard_role_oid
          description: Standard role object identifier.
          in: query
          required: false
          type: string
    post:
      summary: Create a New Configuration Type Role
      operationId: configuration_type_roles.create
      responses:
        '201':
          description: Success.
          schema:
            $ref: '#/definitions/ConfigurationTypeRole'
        '404':
          description: Not found. Configuration type unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - Attempted to set read-only attributes. For example, `created_at` or `configuration_type_uuid`.
              - One or more permissions unrecognized.
              - `name` attribute not unique or longer than 255 characters.
              - `standard_role_oid` blank.
      parameters:
        - name: configuration_type_uuid
          description: The configuration type's universally unique identifier.
          in: path
          required: true
          type: string
        - name: configuration_type_role
          description: |-
             Used to create the new configuration type role.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTypeRoleRequest'

  '/configuration_type_roles':
    x-mdsol:
      doc:
        $ref: '#/x-mdsol/docs/ConfigurationTypeRoles'
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get All Configuration Type Roles
      operationId: configuration_type_roles.standard_roles_index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConfigurationTypeRole'
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - name: standard_role_oid
          description: Standard role object identifier.
          in: query
          required: true
          type: string

  '/configuration_type_roles/{uuid}':
    x-mdsol:
      doc:
        $ref: '#/x-mdsol/docs/ConfigurationTypeRoles'
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      x-mdsol:
        externalPath: idem
      summary: Get a Configuration Type Role
      operationId: configuration_type_roles.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConfigurationTypeRole'
        '404':
          description: Not found. Configuration type role unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'
    put:
      summary: Update a Configuration Type Role
      operationId: configuration_type_roles.update
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConfigurationTypeRole'
        '404':
          description: Not found. Configuration type role unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '409':
          description: Cannot update. Configuration type role has conflicting role assignments for assigned users.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - Attempted to set read-only attributes. For example, `created_at` or `configuration_type_uuid`.
              - One or more of permissions unrecognized.
              - `name` attribute not unique or longer than 255 characters.
              - `standard_role_oid` blank.
      parameters:
        - $ref: '#/parameters/uuid'
        - name: configuration_type_role
          description: Configuration type role title.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConfigurationTypeRoleRequest'
    delete:
      summary: Delete a Configuration Type Role
      operationId: configuration_type_roles.destroy
      responses:
        '204':
          description: Success.
        '404':
          description: Not found. Configuration type role unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported format.
        '409':
          description: Cannot delete configuration type role with associated role assignments.
        '415':
          description: Content-Type header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'

  /conflicting_roles_sets:
    x-mdsol:
      doc:
        $ref: '#/x-mdsol/docs/ConflictingRolesSets'
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get All Conflicting Roles Sets
      description: |-
        Filtered list of conflicting roles sets based on `parent_uri` and `name`.
        Each combination of `parent_uri` and `name` uniquely identifies a single
        conflicting roles set, so providing both attributes returns a single element
        array if a conflicting roles set exists for that combination.
      operationId: conflicting_roles_sets.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ConflictingRolesSet'
        '400':
          description: Required parameter missing.
        '404':
          description: |-
            Not found. Authorization failed. Requester missing required privilege.
        '406':
          description: Accept header format unsupported.
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - $ref: '#/parameters/includeCount'
        - name: parent_uri
          in: query
          required: false
          type: string
          description: |-
            Resource URI for the parent resource of a conflicting roles set.
        - name: name
          in: query
          required: false
          type: string
          description: |-
            Resource URI for the resource that, together with a `parent_uri`, uniquely
            identifies a conflicting roles set.
    post:
      summary: Create a New Conflicting Roles Set
      description: |-
        Create a new conflicting roles set for a pair of `parent_uri` and `name`.
      operationId: conflicting_roles_sets.create
      responses:
        '201':
          description: Success.
          schema:
            $ref: '#/definitions/ConflictingRolesSet'
        '404':
          description: |-
            Not found. Authorization failed. Requester missing required privilege.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - `parent_uri` or `name` not valid URIs.
              - Combination of `parent_uri` and `name` not unique.
              - One or more items in `configuration_type_role_uuids` is
                not a valid UUID.
              - One or more of the specified roles in
                `configuration_type_role_uuids` does not exist.
              - Items in `configuration_type_role_uuids` not unique.
      parameters:
        - name: conflicting_roles_set
          description: Values to create the new conflicting roles set.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConflictingRolesSetCreateRequest'

  /conflicting_roles_sets/{uuid}:
    x-mdsol:
      doc:
        $ref: '#/x-mdsol/docs/ConflictingRolesSets'
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    put:
      summary: Update a Conflicting Roles Set
      operationId: conflicting_roles_sets.update
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ConflictingRolesSet'
        '404':
          description: |-
            Not found. Conflicting roles set unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - Updating the conflicting role set with these roles puts an
                existing user in an incompatible state.
              - Duplicate UUIDs in `configuration_type_role_uuids`.
              - One or more of the roles UUIDs in
                `configuration_type_role_uuids` does not exist.
      parameters:
        - $ref: '#/parameters/uuid'
        - name: conflicting_roles_set
          description: Values to modify the conflicting roles set.
          in: body
          required: true
          schema:
            $ref: '#/definitions/ConflictingRolesSetUpdateRequest'
    delete:
      summary: Delete a Conflicting Roles Set
      operationId: conflicting_roles_sets.destroy
      responses:
        '204':
          description: Success.
        '404':
          description: |-
            Not found. The conflicting roles set unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content Type header format unsupported.
      parameters:
        - $ref: '#/parameters/uuid'

  /grants:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    post:
      summary: Create a New Grant
      description: |-
        Creates one or multiple Grant resources so operators can access specific combinations of
        configuration type roles and operables.
      operationId: grants.create
      responses:
        '201':
          description: Success.
          schema:
            $ref: '#/definitions/BulkGrant'
        '404':
          description: |-
            Not found. Authorization failed. Requester missing a required privilege
            or the `operator_uri` or `role_operable_pairs` unrecognized.
        '406':
          description: Accept header format unsupported.
        '409':
          description: |-
            The configuration type roles specified in the `role_operable_pairs` parameter incompatible with
            another configuration type role assigned to the `operator_uri`.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - One or all of `operator_uri` and `role_operable_pairs` parameters missing or invalid.
              - `role_operable_pairs` exists.
        '429':
          description: Too many requests. Retry again soon.
      parameters:
        - name: grants
          description: Values to create the new grant.
          in: body
          required: true
          schema:
            $ref: '#/definitions/BulkGrantRequest'
        - name: dry_run
          description: Whether to treat request as a dry run; that is, do not persist changes.
          in: query
          required: false
          type: boolean

  '/grants/{uuid}':
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get a Grant
      operationId: grants.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Grant'
        '404':
          description: Not found. Grant unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'
    put:
      summary: Update a Grant
      operationId: grants.update
      responses:
        '200':
          description: Grant successfully updated.
          schema:
            $ref: '#/definitions/Grant'
        '404':
          description: Not found. Grant unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '409':
          description: |-
            The configuration type roles specified in the `role_operable_pairs` parameter incompatible with
            another configuration type role assigned to the `operator_uri`.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - One or all of `operator_uri` and `role_operable_pairs` parameters missing or invalid.
              - `role_operable_pairs` exists.
        '429':
          description: Too many requests. Retry again soon.
      parameters:
        - $ref: '#/parameters/uuid'
        - name: grant
          description: Values to update existing grant.
          in: body
          required: true
          schema:
            $ref: '#/definitions/GrantRequest'
    delete:
      summary: Delete a Grant
      operationId: grants.delete
      responses:
        '204':
          description: Success.
        '404':
          description: Not found. Grant unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '429':
          description: Too many requests. Retry again soon.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'

  /grants/delete_by:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    delete:
      summary: Delete a Grant by `reason_uri`
      operationId: grants.delete_by_reason_uri
      responses:
        '204':
          description: Success.
        '404':
          description: Not found. Grant unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - name: reason_uri
          description: Reason Grant should exist. Specified as URI.
          in: query
          required: true
          type: string

  /permissions:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get All permissions
      description: |-
        A filtered collection of permissions with an operation. Permissions
        are a commitment by the process that owns the protected resource type to use the authorization
        process to authorize requests and perform the given operation on resources of the given type.
        By convention, the operation usually contains an action and the name of the resource; for
        example, `read_studies`.
      operationId: permissions.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/Permission'
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - name: operation
          description: Object identifier for the operation; for example, 'lock', 'unlock'.
          in: query
          required: false
          type: string
        - name: partial_matching
          description: Whether to return all results where the operation field is a substring of the result operations.
          in: query
          required: false
          type: boolean

    post:
      summary: Create a New Permission
      description: Create a permission for a particular operation, which you must uniquely name.
      operationId: permissions.create
      responses:
        '201':
          description: Success.
          schema:
            $ref: '#/definitions/Permission'
        '404':
          description: Not found. Authorization failed. Requester missing required privilege.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following situations occurred:
              - Permission already exists for `operation`.
              - `operation` name left blank.
              - `operation` name not between 3 and 255 characters.
      parameters:
        - name: operation
          description: The permission operation. Must be unique.
          in: query
          required: true
          type: string

  /permissions/{uuid}:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get a Permission
      operationId: permissions.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Permission'
        '404':
          description: Not found. Permission not found or authorization failed.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'

  /privileges:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get All Privileges
      description: |-
        List privilege resources depending on the parameters passed. Supports the following:
          - Privileges for specific operators:
            - Set the `operator_uri` and `operation` parameters.
            - `operable_type` parameter can be optionally set.
          - Privileges for specific operator and operable:
            - Set `operator_uri` and `operable_uri` parameters.
          - Privileges for specific operator and operable scope:
            - Set `operator_uri`, `operation`, and `operable_uri` parameters.
            - `operable_type` parameter can be optionally set.
      operationId: privileges.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/Privilege'
        '404':
          description: Not found. Requester does not have permissions or explicitly prohibited.
        '406':
          description: Accept header format unsupported.
        '422':
          description: |-
            Certain parameters missing or invalid URI. See the operation description
            for the required pair of parameters that you need to pass together.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - $ref: '#/parameters/operatorUri'
        - name: ignore_prohibitions
          description: Whether to include prohibited privileges in result.
          in: query
          required: false
          type: boolean
        - name: operable_type
          description: Resource being checked for permissions.
          in: query
          required: false
          type: string
        - name: operable_uri
          description: Operable; that is, the clinicial resource or collection URI. For example, `com:mdsol:studies:<uuid>`.
          in: query
          required: false
          type: string
        - name: operation
          description: Used to bulk-GET permissions between `operator` and `operable_type`.
          in: query
          required: false
          type: string
        - name: configuration_type_role_uri
          description: Configuration type role's URI from which the privileges are derived.
          in: query
          required: false
          type: string

  /privileges/show:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get a Privilege
      operationId: privileges.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/Privilege'
        '404':
          description: Not found. Requester does not have proper permissions, or `operable_uri` or `operator`
          unrecognized.
        '406':
          description: Accept header format unsupported.
        '422':
          description: Parameters `operable_uri` or `operator_uri` missing or invalid URI.
      parameters:
        - $ref: '#/parameters/operatorUri'
        - name: operable_uri
          description: The clinicial resource or collection URI. For example, `com:mdsol:studies:<uuid>`.
          in: query
          required: true
          type: string
        - name: operation
          description: Operation's object identifier. For example, `read` or `randomize`.
          in: query
          required: true
          type: string
        - name: configuration_type_role_uri
          description: Configuration type role's URI from which the privilege is derived.
          in: query
          required: false
          type: string
        - name: ignore_prohibitions
          description: Whether to include prohibited privileges in result.
          in: query
          required: false
          type: boolean

  /protected_resource_types:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get All Protected Resource Types
      operationId: protected_resource_types.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/ProtectedResourceType'
        '404':
          description: Not found. Requester does not have permission to view protected resource types.
        '406':
          description: Accept header unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - name: oid
          description: Object identifier for the resource; for example, `study-sites`.
          in: query
          required: false
          type: string
        - name: parent
          description: |-
            Protected resource type results will contain the specified object identifier among their parents.
          in: query
          required: false
          type: string

  '/protected_resource_types/{uuid}':
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get a Protected Resource Type
      operationId: protected_resource_types.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/ProtectedResourceType'
        '404':
          description: Not found. Protected resource type not found or authorization failed.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'

  /role_assignments:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get All Role Assignments
      operationId: role_assignments.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/RoleAssignment'
        '404':
          description: Not found. Requester does not allowed to view role assignments.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - $ref: '#/parameters/operatorUri'
        - name: operable_uri
          description: The clinicial resource or collection URI. For example, 'com:mdsol:studies:<uuid>'.
          in: query
          required: false
          type: string
        - name: role_uri
          description: Configuration type role's URI.
          in: query
          required: false
          type: string
    post:
      summary: Create a New Role Assignment
      description: Create a role assignment resource granting an operator access to an operable with a specific role.
      operationId: role_assignments.create
      responses:
        '201':
          description: Success.
          schema:
            $ref: '#/definitions/RoleAssignment'
        '404':
          description: |-
            Not found. Requester missing required privilege,
            or the `operator_uri`, `operable_uri`, or `role_uri` unrecognized.
        '406':
          description: Accept header format unsupported.
        '409':
          description: |-
            Configuration type role specified in the `role_uri` parameter incompatible with
            another configuration type role assigned to the `operator_uri`.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following occurred:
              - Role assignment specified by `operable_uri`, `operator_uri`, and `role_uri` exist.
              - One or all of `operable_uri`, `operator_uri`, and `role_uri` parameters missing or invalid.
      parameters:
        - name: role_assignment
          description: Used to create new role assignment.
          in: body
          required: true
          schema:
            $ref: '#/definitions/RoleAssignmentCreateRequest'

  '/role_assignments/{uuid}':
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get a Role Assignment
      operationId: role_assignments.show
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/RoleAssignment'
        '404':
          description: Not found. Role assignment unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'
    put:
      summary: Update a Role Assignment
      operationId: role_assignments.update
      responses:
        '200':
          description: Success.
          schema:
            $ref: '#/definitions/RoleAssignment'
        '404':
          description: Not found. Role assignment unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '415':
          description: Content-Type header format unsupported.
        '422':
          description: |-
            One of the following occurred:
              - `status` parameter missing or invalid.
              - Unpermitted attributes - any attribute other than `status` - passed in call.
      parameters:
        - $ref: '#/parameters/uuid'
        - name: status
          description: |-
            Role assignment status must be valid, as defined in iMedidata. 
            For example, `invitation_declined`, `access_granted`, or `activation_pending`, and so on.
          in: query
          required: true
          type: string
    delete:
      summary: Delete a Role Assignment
      operationId: role_assignments.destroy
      responses:
        '202':
          description: Role assignment deleted.
        '403':
          description: Cannot delete role assignment using the API since `read-only` attribute is set to true.
        '404':
          description: Not found. Role asssignment unrecognized or authorization failed.
        '406':
          description: Accept header format unsupported.
        '409':
          description: |-
            Cannot delete a role assignment with a prohibition that exposes a conflict with an
            app that validates incompatibility across all operables.
        '415':
          description: Content-Type header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/uuid'
        - name: without_delay
          description: |-
            Whether the role assignment should be deleted instantly or after a delay.
            You can only perform a delayed delete when there are no app permissions in the role,
            otherwise a conflict occurs.
          in: query
          required: false
          type: boolean

  /standard_roles:
    x-mdsol:
      slo:
        $ref: '#/x-mdsol/slos/defaultSLO'
    get:
      summary: Get All Standard Roles
      description: Filtered list of standard roles based on `oid`.
      operationId: standard_roles.index
      responses:
        '200':
          description: Success.
          schema:
            type: array
            items:
              $ref: '#/definitions/StandardRole'
          examples:
            application/json: |-
              [
                {
                  "uuid": "079e6b9d-e467-432e-94bd-ba39104d2493",
                  "oid": "study_auditor"
                },
                {
                  "uuid": "9a6927d3-0f0f-4c17-8098-3172d47cee33",
                  "oid": "global_clinician"
                },
              ]
        '404':
          description: Not found. Requester unauthorized.
        '406':
          description: Accept header format unsupported.
        '500':
          description: Internal server error.
      parameters:
        - $ref: '#/parameters/includeCount'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/perPage'
        - name: oid
          in: query
          required: false
          type: string
          description: Resource's object identifier. For example, `study_auditor`.

parameters:
  page:
    name: page
    description: Specifies the page of results to return.
    in: query
    required: false
    type: integer
    default: 1

  perPage:
    name: per_page
    description: Specifies how many items to return in each page of results.
    in: query
    required: false
    type: integer
    default: 25
    maximum: 1000

  includeCount:
    name: include_count
    description: Whether to include the total count of result entities in the `Mcc-Total-Items` header.
    in: query
    required: false
    type: boolean
    default: false

  operatorUri:
    name: operator_uri
    description: Operator's URI; for example, `com:mdsol:users:<uuid>`.
    in: query
    required: false
    type: string

  uuid:
    name: uuid
    description: Resource's universally unique identifier.
    in: path
    required: true
    type: string

definitions:
  AccessControlList:
    x-mdsol:
      resource: access_control_lists
    type: object
    properties:
      access_type:
        description: Access type that access controls should imply for the operable type.
        type: string
      operable_type:
        description: |-
          The operable type corresponding to the access controls in the access control list.
          Can be any protected resource type or the following virtual types:
          `unblinded_study_environments` or `balance_study_environment_sites`.
        type: string
      s3_bucket_name:
        description: Name of the Amazon S3 bucket storing the access controls for the access control list.
        type: string
      s3_prefix:
        description: Location of the Amazon S3 storing the access controls for the access control list.
        type: string
      status:
        description: Access control list's processing status.
        type: string
        enum:
          - finished
          - finished_with_errors
          - processing
          - failed
      tag:
        description: |-
          The `all_access_for_roles_tagged` attribute for 
          all-access access control lists.
        type: string
      uuid:
        description: Access control list's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
    example:
      {
        "uuid": "a80d3462-4e2d-4750-b436-3b8f0f19d431",
        "operable_type": "studies",
        "access_type": "allow",
        "status": "processing",
        "s3_bucket_name": "dalton-access-control-lists",
        "s3_prefix": "dalton/sandbox/ACLs/a80d3462-4e2d-4750-b436-3b8f0f19d431/ACCESS_CONTROLS/",
        "tag": "mcc_reporter"
      }

  AccessControlListCreateRequest:
    type: object
    required:
      - all_access_for_roles_tagged
      - operable_type
    properties:
      access_type:
        description: Access type that access controls should imply for the operable type.
        type: string
        default: allow
      all_access_for_roles_tagged:
        description: Tag of the role that must exist for all users in user-operable pairs.
        type: string
      operable_type:
        description: |-
          The operable type corresponding to the access controls in the access control list.
          Can be any protected resource type or the following virtual types:
          `unblinded_study_environments` or `balance_study_environment_sites`.
        type: string
    example:
      {
        "operable_type": "studies",
        "access_type": "allow",
        "all_access_for_roles_tagged": "mcc_reporter"
      }

  AttributeCollection:
    x-mdsol:
      resource: attribute_collections
    type: object
    properties:
      uuid:
        description: Attribute collection's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
      attribute_collection_template_oid:
        description: Associated attribute collection template's object identifier.
        type: string
      traversal_attributes:
        description: Hash of attributes included in the traversal query during execution.
        type: object
        additionalProperties:
          type: string
      created_at:
        description: Attribute collection's creation timestamp.
        readOnly: true
        type: string
      updated_at:
        description: Attribute collection's last update timestamp.
        readOnly: true
        type: string
    example:
      {
        "uuid": "079e6b9d-e467-432e-94bd-ba39104d2493",
        "attribute_collection_template_oid": "all_sites_in_country",
        "traversal_attributes": {
          "root_node_uri": "com:mdsol_study_environments:77bb1a35-f55d-4210-97f6-aed34e696fc7",
          "country_identifier": "FRA"
        },
        "created_at": "1980-01-01T00:00:00.000Z",
        "updated_at": "1981-01-01T00:00:00.000Z"
      }

  AttributeCollectionCreateRequest:
    type: object
    properties:
      attribute_collection_template_oid:
        description: Associated attribute collection template's object identifier.
        type: string
      traversal_attributes:
        description: Hash of attributes included in the traversal query during execution.
        type: object
        additionalProperties:
          type: string
    example:
      {
        "attribute_collection_template_oid": "all_sites_in_country",
        "traversal_attributes": {
          "root_node_uri": "com:mdsol_study_environments:77bb1a35-f55d-4210-97f6-aed34e696fc7",
          "country_identifier": "FRA"
        }
      }

  ConfigurationType:
    x-mdsol:
      resource: configuration_types
    type: object
    properties:
      uuid:
        description: Configuration type's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
      client_division_uuid:
        description: Parent client division's universally unique identifier.
        type: string
        format: uuid
      configuration_type_uuids:
        description: Array of configuration type identifiers accessible for the requested configuration type.
        type: array
        items:
          type: string
          format: uuid
      created_at:
        description: Configuration type's creation timestamp.
        readOnly: true
        type: string
      name:
        description: Configuration type's name.
        type: string
      parent_uri:
        description: |-
          URI of the configuration type's parent object. Must be a URI for a
          client division scheme or app; for example, `com:mdsol:apps:01e3339a-52b5-49ed-9040-2b146ea2e4b6`.
        type: string
    example:
      {
        "uuid": "079e6b9d-e467-432e-94bd-ba39104d2493",
        "client_division_uuid": "d067ba34-c52a-4c30-b2bc-6bb8093beac0",
        "parent_uri": "com:mdsol:client_division_schemes:d067ba34-c52a-4c30-b2bc-6bb8093beac0",
        "name": "Global Cosmetic",
        "configuration_type_uuids": [
          "b2652a67-c587-4f71-a8f2-688ce02c32c8"
        ],
        "created_at": "1980-01-01T00:00:00.000Z"
      }

  ConfigurationTypeCreateRequest:
    type: object
    required:
      - name
    properties:
      name:
        description: Configuration type's name.
        type: string
      configuration_type_uuids:
        description: Array of configuration type identifiers accessible for the requested configuration type.
        type: array
        items:
          type: string
          format: uuid
      parent_uri:
        description: |-
          URI of the configuration type's parent object. Must be a URI for a
          client division scheme or app; for example, `com:mdsol:apps:01e3339a-52b5-49ed-9040-2b146ea2e4b6`.
        type: string
    example:
      {
        "parent_uri": "com:mdsol:client_division_schemes:d067ba34-c52a-4c30-b2bc-6bb8093beac0",
        "name": "Global Cosmetics",
        "configuration_type_uuids": [
          "b2652a67-c587-4f71-a8f2-688ce02c32c8",
          "0f709725-9b3e-4510-9bc2-4058579381ed"
        ]
      }

  ConfigurationTypeUpdateRequest:
    type: object
    properties:
      name:
        description: Configuration type's name.
        type: string
      configuration_type_uuids:
        description: Array of configuration type identifiers accessible for the requested configuration type.
        type: array
        items:
          type: string
          format: uuid
    example:
      {
        "name": "New Name",
        "configuration_type_uuids": [
          "a2652a67-c587-4f71-a8f2-688ce02c32c8",
          "1f709725-9b3e-4510-9bc2-4058579381ed"
        ]
      }

  ConfigurationTypeRole:
    x-mdsol:
      resource: configuration_type_roles
    type: object
    properties:
      configuration_type_role_uuids:
        description: Configuration type role's universally unique identifiers that comprise the role.
        type: array
        items:
          type: string
          format: uuid
      configuration_type_uuid:
        description: Parent configuration type role's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
      name:
        description: Configuration type role's name, unique within a configuration type.
        type: string
        maximum: 255
      permissions:
        description: Array of permissions granted by the configuration type role.
        type: array
        items:
          $ref: '#/definitions/ConfigurationTypeRoleNestedPermission'
      prohibited_permissions:
        description: Array of permissions the configuration type role explicitly prohibits.
        type: array
        items:
          $ref: '#/definitions/ConfigurationTypeRoleNestedPermission'
      read_only:
        description: Whether role should be editable by way of the UI.
        type: boolean
        default: false
      role_category_oid:
        description: Role category's object identifier. Corresponds to a Medidata role resource.
        type: string
      standard_role_oid:
        description: Associated Medidata standard role's object identifier.
        type: string
      tags:
        description: Array of strings to categorize the configuration type role. For example, 'internal' or 'rave'.
        type: array
        items:
          type: string
      created_at:
        description: Configuration type role's creation timestamp.
        readOnly: true
        type: string
      updated_at:
        description: Configuration type role's last update timestamp.
        readOnly: true
        type: string
      uuid:
        description: Configuration type role's  universally unique identifier.
        readOnly: true
        type: string
        format: uuid
    example:
      {
        "uuid": "079e6b9d-e467-432e-94bd-ba39104d2493",
        "configuration_type_uuid": "d067ba34-c52a-4c30-b2bc-6bb8093beac0",
        "role_category_oid": "PI",
        "standard_role_oid": "principal_investigator",
        "name": "Principal Investigator",
        "permissions": [
          {
            "protected_resource_type": "studies",
            "operation": "unlock"
          }
        ],
        "prohibited_permissions": [
          {
            "protected_resource_type": "studies",
            "operation": "read"
          }
        ],
        "configuration_type_role_uuids": [
          "b2652a67-c587-4f71-a8f2-688ce02c32c8"
        ],
        "tags": [
          "rave"
        ],
        "created_at": "1980-01-01T00:00:00.000Z",
        "updated_at": "1980-01-01T00:00:00.000Z"
      }

  ConfigurationTypeRoleRequest:
    type: object
    required:
      - name
    properties:
      configuration_type_role_uuids:
        description: |-
          Configuration type role UUIDs that comprise the role. If you send this attribute in the request, the Authorization
          process derives permissions and prohibited permissions from the roles in the array.
        type: array
        items:
          type: string
          format: uuid
      name:
        description: Configuration type role's name, unique within a configuration type.
        type: string
        maximum: 255
      read_only:
        description: Whether the role should be editable by way of the UI.
        type: boolean
      permissions:
        description: Array of permissions granted by the configuration type role.
        type: array
        items:
          $ref: '#/definitions/ConfigurationTypeRoleNestedPermission'
      prohibited_permissions:
        description: Array of permissions the configuration type role explicitly prohibits.
        type: array
        items:
          $ref: '#/definitions/ConfigurationTypeRoleNestedPermission'
      role_category_oid:
        description: Role category's object identifier. Corresponds to a Medidata role resource.
        type: string
      standard_role_oid:
        description: Associated Medidata standard role's object identifier.
        type: string
      tags:
        description: Array of strings to categorize the configuration type role. For example, 'internal', 'mccadmin', or 'rave'.
        type: array
        items:
          type: string
    example:
      {
        "role_category_oid": "PI",
        "standard_role_oid": "principal_investigator",
        "name": "Principal Investigator",
        "permissions": [
          {
            "protected_resource_type": "studies",
            "operation": "unlock"
          }
        ],
        "prohibited_permissions": [
          {
            "protected_resource_type": "studies",
            "operation": "read"
          }
        ]
      }
      # TODO: Display multiple examples once V3 OpenAPI spec is available
      # https://github.com/OAI/OpenAPI-Specification/issues/245
      # role_category_oid: PI
      # name: Principal Investigator
      # configuration_type_role_uuids:
      #   - b2652a67-c587-4f71-a8f2-688ce02c32c8
      #   - 0f709725-9b3e-4510-9bc2-4058579381ed

  ConflictingRolesSet:
    x-mdsol:
      resource: conflicting_roles_sets
    type: object
    properties:
      parent_uri:
        description: |-
          Resource's URI - like an app - that is the parent of the
          conflicting roles set. Uniquely identifies the set along with `name`.
        type: string
      name:
        description: |-
          Resource's URI - like a client division scheme - that uniquely
          identifies the conflicting roles set along with `parent_uri`.
        type: string
      configuration_type_role_uuids:
        description: |-
          Configuration type role's universally unique identifiers corresponding to the building block
          configuration type roles comprising the set.
        type: array
        items:
          type: string
          format: uuid
      created_at:
        description: Conflicting roles set's creation timestamp.
        readOnly: true
        type: string
      updated_at:
        description: Conflicting roles set's last updated timestamp.
        readOnly: true
        type: string
      uuid:
        description: Conflicting roles set's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
    example:
      {
        "uuid": "282b5727-b3fb-49b3-aa52-1f080c3e5c1d",
        "parent_uri": "com:mdsol:apps:1c8ba023-b6a9-4e25-9e63-ec4873b4b722",
        "name": "com:mdsol:client_division_schemes:37ca4ce3-818d-4864-9097-503127a03217",
        "configuration_type_role_uuids": [
          "23a26f5f-6c36-4256-b330-fa5910b38824",
          "4914a0a3-d88c-4443-ad4f-8f0f8c44a297"
        ],
        "created_at": "1980-01-01T00:00:00.000Z",
        "updated_at": "1980-01-01T00:00:00.000Z"
      }

  ConflictingRolesSetCreateRequest:
    type: object
    required:
      - parent_uri
      - name
      - configuration_type_role_uuids
    properties:
      parent_uri:
        description: |-
          Resource's URI - like an app - that is the parent of the
          conflicting roles set. Uniquely identifies the set along with `name`.
        type: string
      name:
        description: |-
          Resource's URI - like a client division scheme - that uniquely
          identifies the conflicting roles set along with `parent_uri`.
        type: string
      configuration_type_role_uuids:
        description: |-
          Configuration type role's universally unique identifiers corresponding to the building block
          configuration type roles comprising the set.
        type: array
        items:
          type: string
          format: uuid
    example:
      {
        "parent_uri": "com:mdsol:apps:d9aa20e4-7d45-49af-90d2-fdd8ed53ee16",
        "name": "com:mdsol:client_division_schemes:a1a369eb-2d65-435d-a6ea-4f9ee62a4da7",
        "configuration_type_role_uuids": [
          "0da4efe9-fd44-4d61-9832-0edf98ee8f5d",
          "110b5c55-452d-414e-a038-5b0511ad7029"
        ]
      }

  ConflictingRolesSetUpdateRequest:
    type: object
    required:
      - configuration_type_role_uuids
    properties:
      configuration_type_role_uuids:
        description: Configuration type role's universally unique identifiers that comprise the set.
        type: array
        items:
          type: string
          format: uuid
    example:
      {
        "configuration_type_role_uuids": [
          "0da4efe9-fd44-4d61-9832-0edf98ee8f5d",
          "110b5c55-452d-414e-a038-5b0511ad7029"
        ]
      }

  Grant:
    x-mdsol:
      resource: grants
    type: object
    properties:
      operator_uri:
        description: |-
          Operator URI for which authorization was granted. For example, `com:mdsol:users:<uuid>`.
        type: string
      reason_uri:
        description: The reason for the grant. Specified as URI or left blank.
        type: string
      role_operable_pairs:
        description: |-
          Collection of configuration type role URI-operable URI pairs. Each pair indicates
          roles the operator is assigned to. Each specified object by the grant.
        type: array
        items:
          $ref: '#/definitions/GrantRoleOperablePair'
      role_operable_pairs_hash:
        description: Auto-generated hash of the `role_operable_pairs` value.
        type: string
      created_at:
        description: Grant's creation timestamp.
        readOnly: true
        type: string
      updated_at:
        description: Grant's last updated timestamp.
        readOnly: true
        type: string
      uuid:
        description: Grant's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
    example:
      {
        "uuid": "bb95cb4f-351f-484c-b64d-cb40861a95b8",
        "operator_uri": "com:mdsol:users:e14431bc-87f9-11e1-9130-00261824db2f",
        "reason_uri": "com:mdsol:study_environment_assignments:460f83f6-e24c-4bec-8f7a-2598167e0a24",
        "role_operable_pairs": [
          {
            "configuration_type_role_uri": "com:mdsol:configuration_type_roles:ab5217d4-8350-11e1-ba4a-00261824db2f",
            "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f"
          }
        ],
        "role_operable_pairs_hash": "9b92ea7554de4d2a401a49e177c30bdbdb3e830b",
        "created_at": "1980-01-01T00:00:00.000Z",
        "updated_at": "1980-01-01T00:00:00.000Z"
      }

  BulkGrant:
    x-mdsol:
      resource: grants
    type: object
    properties:
      grants:
        type: array
        items:
          $ref: '#/definitions/Grant'
    example:
      {
        "grants": [
          {
            "uuid": "bb95cb4f-351f-484c-b64d-cb40861a95b8",
            "operator_uri": "com:mdsol:users:e14431bc-87f9-11e1-9130-00261824db2f",
            "reason_uri": "com:mdsol:study_environment_assignments:460f83f6-e24c-4bec-8f7a-2598167e0a24",
            "role_operable_pairs": [
              {
                "configuration_type_role_uri": "com:mdsol:configuration_type_roles:ab5217d4-8350-11e1-ba4a-00261824db2f",
                "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f"
              }
            ],
            "role_operable_pairs_hash": "9b92ea7554de4d2a401a49e177c30bdbdb3e830b",
            "created_at": "1980-01-01T00:00:00.000Z",
            "updated_at": "1980-01-01T00:00:00.000Z"
          }
        ]
      }

  GrantRequest:
    type: object
    required:
      - operator_uri
      - role_operable_pairs
    properties:
      dry_run:
        description: Whether request should be treated as a dry run. Changes not persisted.
        type: boolean
        default: false
      operator_uri:
        description: URI of the operator receiving the grant.
        type: string
      role_operable_pairs:
        description: Array of configuration type role URIs and operables.
        type: array
        items:
          $ref: '#/definitions/GrantRoleOperablePair'
      reason_uri:
        description: |-
          External resource's URI that is responsible for the grant. If provided, it is globally unique.
          Requests with a duplicate `reason_uri` overwrite the matching grant.
        type: string
      skip_incompatibility_check:
        type: boolean
        description: Whether to validate `role_operable_pairs` compatibility.
        default: false
    example:
      {
        "dry_run": true,
        "operator_uri": "com:mdsol:users:e14431bc-87f9-11e1-9130-00261824db2f",
        "role_operable_pairs": [
          {
            "configuration_type_role_uri": "com:mdsol:configuration_type_roles:ab5217d4-8350-11e1-ba4a-00261824db2f",
            "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f"
          }
        ],
        "skip_incompatibility_check": true
      }

  GrantRoleOperablePair:
    type: object
    properties:
      configuration_type_role_uri:
        description: Configuration type role's URI. For example, `com:mdsol:configuration_type_roles:<uuid>`.
        type: string
      operable_uri:
        description: Operable's URI. For example, `com:mdsol:studies:<uuid>`.
        type: string
    example:
      {
        "configuration_type_role_uri": "com:mdsol:configuration_type_roles:ab5217d4-8350-11e1-ba4a-00261824db2f",
        "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f"
      }


  BulkGrantRequest:
    type: object
    required:
      - grants
    properties:
      skip_incompatibility_check:
        type: boolean
        description: Whether to validate `role_operable_pairs` compatibility.
        default: false
      grants:
        type: array
        items:
          $ref: '#/definitions/GrantRequest'
    example:
      {
        "skip_incompatibility_check": true,
        "grants": [
          {
            "operator_uri": "com:mdsol:users:e14431bc-87f9-11e1-9130-00261824db2f",
            "role_operable_pairs": [
              {
                "configuration_type_role_uri": "com:mdsol:configuration_type_roles:ab5217d4-8350-11e1-ba4a-00261824db2f",
                "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f"
              }
            ]
          }
        ]
      }

  Permission:
    x-mdsol:
      resource: permissions
    type: object
    properties:
      operation:
        description: |-
          Operation's object identifier (OID) for the operation. For example, `lock` or `unlock`.
          By convention, the OID includes the name of the resource; for example, `lock_studies`.
          Make the operation string lowercase and underscore-delimited.
        type: string
      protected_resource_type:
        description: Deprecated - Identifier denoting the class of the protected resource type; default `no_type`.
        # TODO: Add 'deprecated: true' when we begin using V3 of the OpenAPI specification
        type: string
      uuid:
        description: Permission's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
    example:
      {
        "protected_resource_type": "studies",
        "operation": "lock",
        "uuid": "521d14f9-e157-44a9-aa54-ce5eae9c6aba"
      }

  ConfigurationTypeRoleNestedPermission:
    x-mdsol:
      resource: permissions
    type: object
    properties:
      operation:
        description: |-
          Operation's object identifier (OID). For example, `lock` or `unlock`.
          By convention, the OID includes the name of the resource; for example, `lock_studies`.
          Make the operation string lowercase and underscore-delimited.
        type: string
      protected_resource_type:
        description: Deprecated - Identifier denoting the class of the protected resource type; default `no_type`.
        # TODO: Add 'deprecated: true' when we begin using V3 of the OpenAPI specification
        type: string
    example:
      {
        "protected_resource_type": "studies",
        "operation": "lock"
      }

  Privilege:
    x-mdsol:
      resource: privileges
    type: object
    properties:
      operable_uri:
        description: Operable's URI; for example, `com:mdsol:studies:<uuid>`.
        type: string
      operation:
        description: Operation's object identifier.
        type: string
      operator_uri:
        description: Operator's URI; for example, `com:mdsol:users:<uuid>`.
        type: string
    example:
      {
        "operator_uri": "com:mdsol:users:e14431bc-87f9-11e1-9130-00261824db2f",
        "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f",
        "operation": "unlock"
      }

  ProtectedResourceType:
    x-mdsol:
      resource: protected_resource_types
    type: object
    properties:
      oid:
        description: Resource's object identifier; for example, `study-sites`.
        type: string
      members:
        description: |-
          Object identifiers for protected resource types of externally defined descendants. For example,
          study environment sites are members of study environment site groups.
        type: array
        items:
          type: string
          format: uuid
      parents:
        description: |-
          Object identifiers for protected resource types of which the resource is a child.
          For example, `studies` and `sites` for `study-sites`.
        type: array
        items:
          type: string
      uuid:
        description: Protected resource type's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
    example:
      {
        "oid": "study_sites",
        "members": [],
        "parents": [
          "studies",
          "sites"
        ]
      }

  RoleAssignment:
    x-mdsol:
      resource: role_assignments
    type: object
    properties:
      operable_uri:
        description: Operable's URI; for example, `com:mdsol:studies:<uuid>`.
        type: string
      operator_uri:
        description: Operator's URI; for example, `com:mdsol:users:<uuid>`.
        type: string
      read_only:
        description: Whether the role assignment can be modified by way of the API.
        type: boolean
      role_uri:
        description: The configuration type role's URI.
        type: string
      status:
        description: |-
          Role assignment's status, drawn from iMedidata. For example,
          `invitation_declined`, `access_granted`, or `activation_pending`, and so on.
        type: string
      created_at:
        description: Role assignment's creation timestamp.
        readOnly: true
        type: string
      updated_at:
        description: Role assignment's last updated timestamp.
        readOnly: true
        type: string
      uuid:
        description: Role assignment's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
    example:
      {
        "operator_uri": "com:mdsol:users:e14431bc-87f9-11e1-9130-00261824db2f",
        "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f",
        "role_uri": "com:mdsol:configuration_type_roles:ab5217d4-8350-11e1-ba4a-00261824db2f",
        "status": "new_status",
        "read_only": true,
        "created_at": "1980-01-01T00:00:00.000Z",
        "updated_at": "1980-01-01T00:00:00.000Z"
      }

  RoleAssignmentCreateRequest:
    type: object
    required:
      - operable_uri
      - operator_uri
      - role_uri
    properties:
      operable_uri:
        description: Operable's URI; for example, `com:mdsol:studies:<uuid>`.
        type: string
      operator_uri:
        description: Operator's URI; for example, `com:mdsol:users:<uuid>`.
        type: string
      role_uri:
        description: Configuration type role's URI.
        type: string
      read_only:
        description: Whether the role assignment can be modified by way of the API.
        type: string
      status:
        description: Role assignment's status.
        type: string
    example:
      {
        "operator_uri": "com:mdsol:users:e14431bc-87f9-11e1-9130-00261824db2f",
        "operable_uri": "com:mdsol:studies:ea25c8f2-8350-11e1-b36b-00261824db2f",
        "role_uri": "com:mdsol:configuration_type_roles:ab5217d4-8350-11e1-ba4a-00261824db2f"
      }

  StandardRole:
    x-mdsol:
      resource: standard_roles
    type: object
    required:
      - oid
    properties:
      oid:
        description: Resource's object identifier; for example, `study_auditor`.
        type: string
      uuid:
        description: Standard role's universally unique identifier.
        readOnly: true
        type: string
        format: uuid
      created_at:
        description: Standard role's creation timestamp.
        readOnly: true
        type: string
      updated_at:
        description: Standard role's last updated timestamp.
        readOnly: true
        type: string
    example:
      {
        "uuid": "079e6b9d-e467-432e-94bd-ba39104d2493",
        "oid": "study_auditor"
      }
